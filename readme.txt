加密过程
文件读取
以二进制模式读取输入文件，将数据加载到内存中。
遍历字节序列
逐个处理每个字节，根据UTF-8编码规则判断字符的字节数：
单字节字符（ASCII）：最高位为 0（例如 0x00-0x7F）。
多字节字符：首字节的高位模式标识字符长度（如 0xC0 表示2字节，0xE0 表示3字节，0xF0 表示4字节）。
字节级加密
ASCII字符：直接对低7位进行移位，取模 0x80 防止溢出。
例如：空格（0x20）移位3后变为 0x23（#）。
多字节首字节：保留前缀（如 1110xxxx 中的 1110），仅对数据部分（xxxx）移位，确保UTF-8结构不变。
解密过程
逆向移位
调用加密函数 caesar_encrypt_utf8，但传入负的移位量（例如 shift = -3），抵消加密时的移位操作。
恢复原始数据
通过反向移位，所有字节（包括ASCII、多字节字符、续字节）均还原为原始值。

